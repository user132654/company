// <auto-generated />
using Company.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Company.Migrations.Company
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20180304125434_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Company.Models.BusinessLogic.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Company.Models.BusinessLogic.ObjectOfExpenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<int>("MaterialId");

                    b.Property<int>("ProviderId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ObjectOfExpenditures");
                });

            modelBuilder.Entity("Company.Models.BusinessLogic.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MaterialId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Company.Models.BusinessLogic.ObjectOfExpenditure", b =>
                {
                    b.HasOne("Company.Models.BusinessLogic.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Company.Models.BusinessLogic.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Company.Models.BusinessLogic.Provider", b =>
                {
                    b.HasOne("Company.Models.BusinessLogic.Material", "Material")
                        .WithMany("Providers")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
